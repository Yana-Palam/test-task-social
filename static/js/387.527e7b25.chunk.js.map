{"version":3,"file":"static/js/387.527e7b25.chunk.js","mappings":"sRAAaA,EAAe,SAAAC,GAAK,OAAIA,EAAMC,OAAOC,KAAjB,EACpBC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,OAAOG,SAAjB,EACvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,OAAOK,KAAjB,EACnBC,EAAmB,SAAAP,GAAK,OAAIA,EAAMC,OAAOO,UAAjB,E,sCCCxBC,EAAgBC,EAAAA,GAAAA,IAAH,uc,igCAIhBC,GAcGC,EAAOF,EAAAA,GAAAA,IAAH,iJAQJG,EAAgBH,EAAAA,GAAAA,IAAH,6OAYbI,EAAYJ,EAAAA,GAAAA,IAAH,mMAgBTK,GALWL,EAAAA,GAAAA,IAAH,sEAKGA,EAAAA,GAAAA,GAAH,8HASRM,EAAON,EAAAA,GAAAA,EAAH,oFAMJO,EAAOP,EAAAA,GAAAA,GAAH,sJASJQ,EAASR,EAAAA,GAAAA,OAAH,qiB,SCVnB,I,EAAA,EA1DA,YAAsE,IAArDS,EAAoD,EAApDA,GAAIC,EAAgD,EAAhDA,OAAQC,EAAwC,EAAxCA,KAAMpB,EAAkC,EAAlCA,OAAQqB,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,YACpD,GAAgCC,EAAAA,EAAAA,UAASD,GAAzC,eAAOE,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,UAASF,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAsBA,OACE,UAACnB,EAAD,YACE,SAACG,EAAD,WACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAWe,IAAKT,EAAQU,IAAI,cAAcC,MAAM,KAAKC,OAAO,YAIhE,UAACf,EAAD,YACE,yBACE,SAACF,EAAD,UAAWM,OAEb,yBACE,UAACL,EAAD,WAAO,IAAIiB,KAAKC,aAAa,SAASC,OAAOlC,GAA7C,gBAEF,yBACE,UAACe,EAAD,WACG,IAAIiB,KAAKC,aAAa,SAASC,OAAOR,GADzC,sBAMJ,SAACT,EAAD,CACEkB,QAAS,YA3CO,SAAAjB,GACTS,EAAXH,EAAsB,SAAAY,GAAI,OAAIA,EAAO,CAAX,EAA2B,SAAAA,GAAI,OAAIA,EAAO,CAAX,GACzDX,GAAY,SAAAW,GAAI,OAAKA,CAAL,IAEhB,IAAMC,EAAcb,EAKhB,CACEH,UAAWK,EAAU,EACrBJ,aAAa,GANf,CACED,UAAWK,EAAU,EACrBJ,aAAa,GAOnBgB,EAAAA,EAAAA,IAAA,gEAC2DpB,GACzDmB,EAEH,CA0BOE,CAAcrB,EACf,EACDsB,UAAWhB,GAAY,SAJzB,SAMGA,EAAW,YAAc,aAIjC,ECpEYR,EAAOP,EAAAA,GAAAA,GAAH,6KCyBjB,I,EAAA,EApBA,WACE,IAAMgC,GAAYC,EAAAA,EAAAA,IAAY5C,GAC9B,OACE,SAAC,EAAD,UACG2C,EAAUE,KAAI,gBAAGzB,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,KAAMpB,EAArB,EAAqBA,OAAQqB,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,YAAxC,OACb,yBACE,SAAC,EAAD,CACEJ,GAAIA,EACJC,OAAQA,EACRC,KAAMA,EACNpB,OAAQA,EACRqB,UAAWA,EACXC,YAAaA,KAPRJ,EADI,KAcpB,ECvBY0B,EAAenC,EAAAA,GAAAA,OAAH,qTCczB,I,cAAA,EAXA,WAIE,OACE,SAACmC,EAAD,CAAcT,QAJA,WACdU,OAAOC,SAAS,CAAEC,IAAK,EAAGC,SAAU,UACrC,EAEiCC,KAAK,SAArC,UACE,SAAC,MAAD,CAAaC,KAAM,GAAIC,MAAM,aAGlC,E,oBCdYC,GAAe,SAAArD,GAAK,OAAIA,EAAMsD,QAAQC,KAAlB,EACpBC,GAAa,SAAAxD,GAAK,OAAIA,EAAMsD,QAAQG,IAAlB,E,mBCClBC,GAAgBhD,EAAAA,GAAAA,IAAH,+CAIbiD,GAAcjD,EAAAA,GAAAA,IAAH,wOAeXkD,GAAgBlD,EAAAA,GAAAA,KAAH,oDAIbmD,GAAQnD,EAAAA,GAAAA,IAAH,sTAgBLO,GAAOP,EAAAA,GAAAA,GAAH,kEAKJoD,GAAWpD,EAAAA,GAAAA,GAAH,+PAeRM,GAAON,EAAAA,GAAAA,EAAH,wEC5CXqD,GAAc,CAAC,WAAY,SAAU,cAmE3C,I,YAAA,GAjEA,WACE,IAAMC,GAAYC,EAAAA,EAAAA,QAAO,MACzB,GAAkCzC,EAAAA,EAAAA,WAAS,GAA3C,eAAO0C,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAS3B,EAAAA,EAAAA,IAAYU,IAErBkB,EAAe,SAAAC,GACdR,EAAUS,QAAQC,SAASF,EAAEG,SAChCR,GAAa,EAEhB,EAsBD,OApBAS,EAAAA,EAAAA,YAAU,WACR,GAAKV,GACAF,EAAUS,QAIf,OAFAI,SAASC,iBAAiB,QAASP,GAE5B,WACLM,SAASE,oBAAoB,QAASR,EACvC,CACF,GAAE,CAACL,KAYF,UAACR,GAAD,CAAesB,IAAKhB,EAApB,WACE,UAACL,GAAD,YACE,SAAC,MAAD,CAAaP,MAAM,UAAUD,KAAM,MACnC,SAACS,GAAD,CACExB,QAAS,WACP+B,GAAa,SAAA9B,GAAI,OAAKA,CAAL,GAClB,EAHH,SAKGiC,OAGJJ,IACC,SAACL,GAAD,WACE,SAAC,GAAD,UACGE,GAAYnB,KAAI,SAACqC,EAAMC,GAAP,OACf,SAACpB,GAAD,CAEE1B,QAAS,WA3BD,IAAAmB,IA4BQ0B,EA3B5Bd,GAAa,GAETG,IAAWf,IACba,GAASe,EAAAA,GAAAA,OACTf,GAASgB,EAAAA,GAAAA,IAAU7B,IAwBR,EACDd,UAAW6B,IAAWW,GAAQ,SALhC,UAOE,SAAC,GAAD,UAAOA,KANFC,EAFQ,UAgB5B,EChFYhE,GAASR,EAAAA,GAAAA,OAAH,ueAwBN2E,GAAU3E,EAAAA,GAAAA,IAAH,gGAMPgD,GAAgBhD,EAAAA,GAAAA,IAAH,6MAYb4E,GAAe5E,EAAAA,GAAAA,OAAH,ib,WC9BzB,GAZe,WACb,OACE,SAAC,MAAD,CACE6E,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClB1D,MAAM,KACN2D,SAAS,GAGd,E,WC6ED,OA/DA,WACE,IAAMC,GAAWC,EAAAA,EAAAA,MACXxB,GAAWC,EAAAA,EAAAA,MAEXjE,GAAYuC,EAAAA,EAAAA,IAAYxC,GACxBG,GAAQqC,EAAAA,EAAAA,IAAYtC,GACpBG,GAAamC,EAAAA,EAAAA,IAAYpC,GAEzB+D,GAAS3B,EAAAA,EAAAA,IAAYU,IACrBI,GAAOd,EAAAA,EAAAA,IAAYa,IAEzB,GAAwChC,EAAAA,EAAAA,WAAS,GAAjD,eAAOqE,EAAP,KAAqBC,EAArB,KAEMC,EAAS,mCAAG,8EAChB3B,GAAS4B,EAAAA,GAAAA,GAAY,CAAE1B,OAAAA,EAAQb,KAAAA,KADf,2CAAH,qDA2Bf,OAvBAmB,EAAAA,EAAAA,YAAU,WACRmB,GAED,GAAE,CAACtC,EAAMa,KAEVM,EAAAA,EAAAA,YAAU,WAGR9B,OAAOgC,iBAAiB,UAAU,WAChChC,OAAOmD,QAHO,IAGaH,GAAgB,GAAQA,GAAgB,EACpE,GACF,GAAE,IAUHxF,IAAS4F,EAAAA,EAAAA,IAAM5F,IAGb,SAAC6F,EAAA,EAAD,WACE,UAACd,GAAD,YACE,UAAC,GAAD,YACE,UAACC,GAAD,CAAclD,QAVL,WACfuD,EAAS,IACV,EAQwCzC,KAAK,SAAtC,qBAEE,SAAC,MAAD,CAAmBC,KAAK,aAE1B,SAAC,GAAD,QAEF,SAAC,EAAD,IACC/C,IAAa,SAAC,GAAD,KACZI,IAAeJ,IACf,SAAC,GAAD,CAAQgC,QAvBG,WACjBgC,GAASgC,EAAAA,GAAAA,MACV,EAqBoClD,KAAK,SAAlC,uBAID2C,IAAgB,SAAC,EAAD,QAIxB,C","sources":["redux/tweets/tweetsSelectors.js","components/Tweet/Tweet.styled.js","components/Tweet/Tweet.jsx","components/TweetsList/TweetsList.styled.js","components/TweetsList/TweetsList.jsx","components/ButtonUp/ButtonUp.styled.js","components/ButtonUp/ButtonUp.jsx","redux/filters/filtersSelectors.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/TweetsPage/TweetsPage.styled.js","components/Loader/Loader.jsx","pages/TweetsPage/TweetsPage.jsx"],"sourcesContent":["export const selectTweets = state => state.tweets.items;\r\nexport const selectIsLoading = state => state.tweets.isLoading;\r\nexport const selectError = state => state.tweets.error;\r\nexport const selectIsDataOver = state => state.tweets.isDataOver;\r\n","import styled from 'styled-components';\r\nimport logo from '../../assets/images/logo.png';\r\nimport image from '../../assets/images/picture.png';\r\n\r\nexport const StyledWrapper = styled.div`\r\n  position: relative;\r\n  width: 380px;\r\n  background: url(${logo}) no-repeat 20px 20px,\r\n    url(${image}) no-repeat center 28px/78%,\r\n    linear-gradient(114.99deg, #471ca9 -0.99%, #5736a3 54.28%, #4b2a99 78.99%);\r\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\r\n  border-radius: 20px;\r\n  text-align: center;\r\n\r\n  @media (min-width: 320px) {\r\n    width: 290px;\r\n  }\r\n  @media (min-width: 410px) {\r\n    width: 380px;\r\n  }\r\n`;\r\n\r\nexport const Line = styled.div`\r\n  position: relative;\r\n  top: 214px;\r\n  height: 8px;\r\n  background-color: #ebd8ff;\r\n  box-shadow: var(--boxShadowLine);\r\n`;\r\n\r\nexport const AvatarWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #ebd8ff;\r\n  box-shadow: var(--boxShadowEllipse);\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const AvatarImg = styled.img`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  /* width: 62px;\r\n  height: 62px; */\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n`;\r\n\r\nexport const UserInfo = styled.div`\r\n  margin-top: 284px;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const UserName = styled.h2`\r\n  text-align: center;\r\n\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n\r\n  color: var(--titleTextColor);\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  text-align: center;\r\n\r\n  color: var(--primaryTextColor);\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 16px;\r\n  margin-top: 284px;\r\n  margin-bottom: 26px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 14px 28px;\r\n  box-shadow: var(--boxShadowButton);\r\n  border-radius: 10px;\r\n  border: none;\r\n  cursor: pointer;\r\n  margin-bottom: 36px;\r\n\r\n  font-family: inherit;\r\n  font-weight: 600;\r\n  font-size: 18px;\r\n  line-height: inherit;\r\n  text-transform: uppercase;\r\n  color: var(--primaryButtonColor);\r\n  background: var(--primaryButtonBackground);\r\n  transition: opacity var(--transition);\r\n\r\n  &.active {\r\n    background-color: var(--secondaryButtonBackground);\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  StyledWrapper,\r\n  AvatarWrapper,\r\n  Line,\r\n  AvatarImg,\r\n  UserName,\r\n  Text,\r\n  Button,\r\n  List,\r\n} from './Tweet.styled';\r\n\r\nfunction Tweet({ id, avatar, user, tweets, followers, isFollowing }) {\r\n  const [isFollow, setIsFollow] = useState(isFollowing);\r\n  const [counter, setCounter] = useState(followers);\r\n\r\n  const onClickFollow = id => {\r\n    isFollow ? setCounter(prev => prev - 1) : setCounter(prev => prev + 1);\r\n    setIsFollow(prev => !prev);\r\n\r\n    const updateData = !isFollow\r\n      ? {\r\n          followers: counter + 1,\r\n          isFollowing: true,\r\n        }\r\n      : {\r\n          followers: counter - 1,\r\n          isFollowing: false,\r\n        };\r\n\r\n    axios.put(\r\n      `https://643aea3090cd4ba563051059.mockapi.io/api/users/${id}`,\r\n      updateData\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledWrapper>\r\n      <Line>\r\n        <AvatarWrapper>\r\n          <AvatarImg src={avatar} alt=\"User avatar\" width=\"62\" height=\"62\" />\r\n        </AvatarWrapper>\r\n      </Line>\r\n\r\n      <List>\r\n        <li>\r\n          <UserName>{user}</UserName>\r\n        </li>\r\n        <li>\r\n          <Text>{new Intl.NumberFormat('de-DE').format(tweets)} Tweets</Text>\r\n        </li>\r\n        <li>\r\n          <Text>\r\n            {new Intl.NumberFormat('de-DE').format(counter)} Followers\r\n          </Text>\r\n        </li>\r\n      </List>\r\n\r\n      <Button\r\n        onClick={() => {\r\n          onClickFollow(id);\r\n        }}\r\n        className={isFollow && 'active'}\r\n      >\r\n        {isFollow ? 'Following' : 'Follow'}\r\n      </Button>\r\n    </StyledWrapper>\r\n  );\r\n}\r\n\r\nexport default Tweet;\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  display: flex;\r\n  gap: 20px;\r\n  flex-wrap: wrap;\r\n\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n  padding-top: 30px;\r\n`;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectTweets } from 'redux/tweets/tweetsSelectors';\r\n\r\nimport Tweet from 'components/Tweet/Tweet';\r\nimport { List } from './TweetsList.styled';\r\n\r\nfunction TweetsList() {\r\n  const tweetsArr = useSelector(selectTweets);\r\n  return (\r\n    <List>\r\n      {tweetsArr.map(({ id, avatar, user, tweets, followers, isFollowing }) => (\r\n        <li key={id}>\r\n          <Tweet\r\n            id={id}\r\n            avatar={avatar}\r\n            user={user}\r\n            tweets={tweets}\r\n            followers={followers}\r\n            isFollowing={isFollowing}\r\n          />\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nexport default TweetsList;\r\n","import styled from 'styled-components';\r\n\r\nexport const ButtonStyled = styled.button`\r\n  cursor: pointer;\r\n  position: fixed;\r\n  bottom: 40px;\r\n  right: 5%;\r\n  padding: 14px 16px;\r\n  border: none;\r\n  border-radius: 50%;\r\n\r\n  background-color: #5cd3a841;\r\n  transition: background-color var(--transition);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #5cd3a85a;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { AiOutlineUp } from 'react-icons/ai';\r\n\r\nimport { ButtonStyled } from './ButtonUp.styled';\r\n\r\nfunction ButtonUp() {\r\n  const onClick = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n  return (\r\n    <ButtonStyled onClick={onClick} type=\"button\">\r\n      <AiOutlineUp size={24} color=\"#4b2a99\" />\r\n    </ButtonStyled>\r\n  );\r\n}\r\n\r\nexport default ButtonUp;\r\n","export const selectFilter = state => state.filters.value;\r\nexport const selectPage = state => state.filters.page;\r\n","import styled from 'styled-components';\r\n\r\nexport const FilterWrapper = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const FilterLabel = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  border-bottom: 1px dashed #4b2a99;\r\n\r\n  cursor: pointer;\r\n  transition: opacity var(--transition);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const FilterCurrent = styled.span`\r\n  color: var(--mainColor);\r\n`;\r\n\r\nexport const Popup = styled.div`\r\n  z-index: 1;\r\n  position: absolute;\r\n  right: 0;\r\n  margin-top: 15px;\r\n  background: #ffffff;\r\n  box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.09);\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  padding: 10px 0;\r\n  @media (max-width: 340px) {\r\n    font-size: 14px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  padding: 12px 20px;\r\n  cursor: pointer;\r\n\r\n  transition: background-color var(--transition);\r\n\r\n  &:hover {\r\n    background-color: rgba(75, 42, 153, 0.2);\r\n  }\r\n\r\n  &.active {\r\n    background-color: rgba(75, 42, 153, 0.1);\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 18px;\r\n  color: var(--mainColor);\r\n`;\r\n","import React from 'react';\r\nimport { useState, useRef, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { MdFilterAlt } from 'react-icons/md';\r\nimport { selectFilter } from 'redux/filters/filtersSelectors';\r\nimport { setFilter } from 'redux/filters/filtersSlice';\r\nimport { resetTweets } from 'redux/tweets/tweetsSlice';\r\nimport {\r\n  FilterWrapper,\r\n  FilterLabel,\r\n  FilterCurrent,\r\n  Popup,\r\n  List,\r\n  ListItem,\r\n  Text,\r\n} from './Filter.styled';\r\n\r\nconst filterItems = ['show all', 'follow', 'followings'];\r\n\r\nfunction Filter() {\r\n  const filterRef = useRef(null);\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const filter = useSelector(selectFilter);\r\n\r\n  const handlerClick = e => {\r\n    if (!filterRef.current.contains(e.target)) {\r\n      setIsVisible(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isVisible) return;\r\n    if (!filterRef.current) return;\r\n\r\n    document.addEventListener('click', handlerClick);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', handlerClick);\r\n    };\r\n  }, [isVisible]);\r\n\r\n  const onSelectValue = value => {\r\n    setIsVisible(false);\r\n\r\n    if (filter !== value) {\r\n      dispatch(resetTweets());\r\n      dispatch(setFilter(value));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FilterWrapper ref={filterRef}>\r\n      <FilterLabel>\r\n        <MdFilterAlt color=\"#4b2a99\" size={26} />\r\n        <FilterCurrent\r\n          onClick={() => {\r\n            setIsVisible(prev => !prev);\r\n          }}\r\n        >\r\n          {filter}\r\n        </FilterCurrent>\r\n      </FilterLabel>\r\n      {isVisible && (\r\n        <Popup>\r\n          <List>\r\n            {filterItems.map((item, index) => (\r\n              <ListItem\r\n                key={index}\r\n                onClick={() => {\r\n                  onSelectValue(item);\r\n                }}\r\n                className={filter === item && 'active'}\r\n              >\r\n                <Text>{item}</Text>\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Popup>\r\n      )}\r\n    </FilterWrapper>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  background-color: #4b2a99;\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n\r\n  color: #ebd8ff;\r\n  border: none;\r\n  padding: 14px 28px;\r\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  margin-bottom: 40px;\r\n  position: relative;\r\n  text-align: center;\r\n`;\r\n\r\nexport const FilterWrapper = styled.div`\r\n  padding: 20px 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media (max-width: 400px) {\r\n    flex-direction: column;\r\n    gap: 8px;\r\n  }\r\n`;\r\n\r\nexport const ButtonGoBack = styled.button`\r\n  font-family: 'Montserrat', sans-serif;\r\n  font-weight: 500;\r\n  text-align: center;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n  text-transform: uppercase;\r\n\r\n  color: #4b2a99;\r\n  background: transparent;\r\n  cursor: pointer;\r\n  border: none;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 4px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n","import { RotatingLines } from 'react-loader-spinner';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <RotatingLines\r\n      strokeColor=\"grey\"\r\n      strokeWidth=\"5\"\r\n      animationDuration=\"0.75\"\r\n      width=\"64\"\r\n      visible={true}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport { AiOutlineRollback } from 'react-icons/ai';\r\nimport TweetsList from 'components/TweetsList/TweetsList';\r\nimport ButtonUp from 'components/ButtonUp/ButtonUp';\r\n\r\nimport Container from 'components/Container/Container';\r\nimport Filter from 'components/Filter/Filter';\r\nimport {\r\n  Button,\r\n  Wrapper,\r\n  FilterWrapper,\r\n  ButtonGoBack,\r\n} from './TweetsPage.styled';\r\nimport Loader from 'components/Loader/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchTweets } from 'redux/tweets/tweetsOperations';\r\nimport {\r\n  selectIsLoading,\r\n  selectError,\r\n  selectIsDataOver,\r\n} from 'redux/tweets/tweetsSelectors';\r\nimport { selectFilter, selectPage } from 'redux/filters/filtersSelectors';\r\nimport { incrementPage } from 'redux/filters/filtersSlice';\r\n\r\nfunction TweetsPage() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const isLoading = useSelector(selectIsLoading);\r\n  const error = useSelector(selectError);\r\n  const isDataOver = useSelector(selectIsDataOver);\r\n\r\n  const filter = useSelector(selectFilter);\r\n  const page = useSelector(selectPage);\r\n\r\n  const [isVisibleBtn, setIsVisibleBtn] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    dispatch(fetchTweets({ filter, page }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [page, filter]);\r\n\r\n  useEffect(() => {\r\n    const trigger = 350;\r\n\r\n    window.addEventListener('scroll', () => {\r\n      window.scrollY > trigger ? setIsVisibleBtn(true) : setIsVisibleBtn(false);\r\n    });\r\n  }, []);\r\n\r\n  const onLoadMore = () => {\r\n    dispatch(incrementPage());\r\n  };\r\n\r\n  const onGoBack = () => {\r\n    navigate('/');\r\n  };\r\n\r\n  error && toast(error);\r\n\r\n  return (\r\n    <Container>\r\n      <Wrapper>\r\n        <FilterWrapper>\r\n          <ButtonGoBack onClick={onGoBack} type=\"button\">\r\n            Go back\r\n            <AiOutlineRollback size=\"22px\" />\r\n          </ButtonGoBack>\r\n          <Filter />\r\n        </FilterWrapper>\r\n        <TweetsList />\r\n        {isLoading && <Loader />}\r\n        {!isDataOver && !isLoading && (\r\n          <Button onClick={onLoadMore} type=\"button\">\r\n            Load more\r\n          </Button>\r\n        )}\r\n        {isVisibleBtn && <ButtonUp />}\r\n      </Wrapper>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TweetsPage;\r\n"],"names":["selectTweets","state","tweets","items","selectIsLoading","isLoading","selectError","error","selectIsDataOver","isDataOver","StyledWrapper","styled","image","Line","AvatarWrapper","AvatarImg","UserName","Text","List","Button","id","avatar","user","followers","isFollowing","useState","isFollow","setIsFollow","counter","setCounter","src","alt","width","height","Intl","NumberFormat","format","onClick","prev","updateData","axios","onClickFollow","className","tweetsArr","useSelector","map","ButtonStyled","window","scrollTo","top","behavior","type","size","color","selectFilter","filters","value","selectPage","page","FilterWrapper","FilterLabel","FilterCurrent","Popup","ListItem","filterItems","filterRef","useRef","isVisible","setIsVisible","dispatch","useDispatch","filter","handlerClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","item","index","resetTweets","setFilter","Wrapper","ButtonGoBack","strokeColor","strokeWidth","animationDuration","visible","navigate","useNavigate","isVisibleBtn","setIsVisibleBtn","fetchData","fetchTweets","scrollY","toast","Container","incrementPage"],"sourceRoot":""}